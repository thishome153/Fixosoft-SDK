/***********************************************************************************
* Fixosoft 2014
*-----------Утилиты обработки строк------------------------
* // О//уеешь с ваших строк....
//***********************************************************************************/

#include "stdafx.h"
#include "MyStrMarshal.h"
#include "string"

//using System;



// Преобразование строки .NET в указатель на строку WINAPI/
// Понадобился, однако для вызова функций чистого С 
char* StringtoChar(System::String ^ s)
		 {
			 using namespace Runtime::InteropServices;
    		   return (char*)Marshal::StringToHGlobalAnsi(s).ToPointer();
		 }

		 // Для nonUnicode:
// А эта хуйня понадобилась? чтобы из недр WINAPI получать строки .NET:
System::String ^  LPTSTRToString(LPTSTR str)
		 {
			 using namespace Runtime::InteropServices;
			 String^ g = Marshal::PtrToStringUni((IntPtr)str);
          return  g;
		 }

// ANSI char в управляемый string:
System::String ^  CharToString(char *str)
		 {
			 if (!str) return L"";
			 using namespace Runtime::InteropServices;
			 String^ g = Marshal::PtrToStringAnsi((IntPtr)str);
          return  g;
		 }

//Чуть Другой тип строк на входе:
System::String ^  LPSTRToString(LPSTR  str) 		 // Для nonUnicode:
{
			 using namespace Runtime::InteropServices;
			 String^ g = Marshal::PtrToStringUni((IntPtr)str);
          return  g;
}
	
//Серийный номер hex в строку
//Полное извращение для серийного номера в HEX
System::String ^ PBYTEToStr(PBYTE x,const int cb)
{
   char *str= NULL;
   str = new char[2*cb+1]; // массив нужен в два раза длиньше? один байт в HEX -это FF, к примеру - два символа.
   str[cb-1] = '\0';
    int cntr = cb;
   for (int i=0; i<=cb-1; i++) {
	 cntr --;
      sprintf( str+i*2, "%02x", x[cntr]);
	  
   }
   return CharToString(str);
}